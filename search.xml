<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Ubuntu 纸飞机起飞</title>
      <link href="/2018/12/10/Ubuntu-%E7%BA%B8%E9%A3%9E%E6%9C%BA%E8%B5%B7%E9%A3%9E/"/>
      <content type="html"><![CDATA[<hr><h2 id="2018-7-10"><a href="#2018-7-10" class="headerlink" title="2018.7.10"></a>2018.7.10</h2><p>在安装好Ubuntu后，因为想使用Chrome，在登录的时候发现要先break wall一下。</p><p>这时候我觉得需要设置个全局的ssr代理。因此，才有了下面的过程。</p><a id="more"></a><p><strong>1. 下载SSR客户端</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/ssrbackup/shadowsocksr</span><br></pre></td></tr></table></figure><p><strong>2. 配置SSR的配置文件</strong></p><p>进入刚刚复制下来的文件夹，里面有一个<code>config.json</code>的文件，将它复制一份并命名为<code>config.json.backup</code>作为备份。</p><p>打开<code>config.json</code>文件，对里面的一些参数进行修改。</p><p>主要有以下几项</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>: <span class="string">"0.0.0.0"</span>,   <span class="meta"># SSR服务器的IP地址</span></span><br><span class="line">    <span class="string">"server_port"</span>: <span class="number">8388</span>,   <span class="meta"># SSR服务器的端口</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"password"</span>: <span class="string">"m"</span>,       <span class="meta"># SSR服务器的密码</span></span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"aes-128-ctr"</span>,   <span class="meta"># 加密方法</span></span><br><span class="line">    <span class="string">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>,  <span class="meta"># 协议</span></span><br><span class="line">    <span class="string">"protocol_param"</span>: <span class="string">""</span>,           <span class="meta"># 协议参数</span></span><br><span class="line">    <span class="string">"obfs"</span>: <span class="string">"tls1.2_ticket_auth_compatible"</span>,  <span class="meta"># 混淆协议</span></span><br><span class="line">    <span class="string">"obfs_param"</span>: <span class="string">""</span>,   <span class="meta"># 混淆参数</span></span><br><span class="line"></span><br><span class="line">    <span class="meta"># 以上这些主要是SSR服务商提供的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. 运行SSR</strong></p><p>在当前目录下，运行一下命令</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python3</span> shadowsocks/local.<span class="keyword">py</span></span><br></pre></td></tr></table></figure><p>如果看到以下输出，就没啥大问题了。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">IPv6</span> <span class="selector-tag">support</span></span><br><span class="line">2018<span class="selector-tag">-07-09</span> 11<span class="selector-pseudo">:04</span><span class="selector-pseudo">:56</span> <span class="selector-tag">INFO</span>     <span class="selector-tag">util</span><span class="selector-class">.py</span><span class="selector-pseudo">:85</span> <span class="selector-tag">loading</span> <span class="selector-tag">libcrypto</span> <span class="selector-tag">from</span> <span class="selector-tag">libcrypto</span><span class="selector-class">.so</span><span class="selector-class">.1</span><span class="selector-class">.1</span></span><br><span class="line">2018<span class="selector-tag">-07-09</span> 11<span class="selector-pseudo">:04</span><span class="selector-pseudo">:56</span> <span class="selector-tag">INFO</span>     <span class="selector-tag">local</span><span class="selector-class">.py</span><span class="selector-pseudo">:50</span> <span class="selector-tag">local</span> <span class="selector-tag">start</span> <span class="selector-tag">with</span> <span class="selector-tag">protocol</span><span class="selector-attr">[auth_aes128_md5]</span> <span class="selector-tag">password</span> <span class="selector-attr">[b'm']</span> <span class="selector-tag">method</span> <span class="selector-attr">[aes-128-ctr]</span> <span class="selector-tag">obfs</span> <span class="selector-attr">[tls1.2_ticket_auth_compatible]</span> <span class="selector-tag">obfs_param</span> <span class="selector-attr">[]</span></span><br><span class="line">2018<span class="selector-tag">-07-09</span> 11<span class="selector-pseudo">:04</span><span class="selector-pseudo">:56</span> <span class="selector-tag">INFO</span>     <span class="selector-tag">local</span><span class="selector-class">.py</span><span class="selector-pseudo">:54</span> <span class="selector-tag">starting</span> <span class="selector-tag">local</span> <span class="selector-tag">at</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:1080</span></span><br><span class="line">2018<span class="selector-tag">-07-09</span> 11<span class="selector-pseudo">:04</span><span class="selector-pseudo">:56</span> <span class="selector-tag">INFO</span>     <span class="selector-tag">asyncdns</span><span class="selector-class">.py</span><span class="selector-pseudo">:324</span> <span class="selector-tag">dns</span> <span class="selector-tag">server</span>: <span class="selector-attr">[('127.0.0.53', 53)]</span></span><br></pre></td></tr></table></figure><p>接下来就是如何利用privoxy设置全局代理</p><p><strong>4. 安装<code>privoxy</code></strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> privoxy</span><br></pre></td></tr></table></figure><p><strong>5. 配置<code>privoxy</code></strong></p><p>安装后，打开<code>/etc/privoxy/config</code>，把这两句注释掉（具体位置在4.2部分的前面两句）：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">listen-address</span>  127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:8118</span></span><br><span class="line"># <span class="selector-tag">listen-address</span>  <span class="selector-attr">[::1]</span><span class="selector-pseudo">:8118</span></span><br></pre></td></tr></table></figure><p>在文件的最后加上：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">forward-socks5 / <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">1080</span> .</span><br><span class="line">listen-addresss <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">8118</span></span><br></pre></td></tr></table></figure><p>一定要注意第一行最后的<strong>点</strong></p><hr><p>最后就是设置系统的代理，打开Ubuntu的设置。</p><p>在左侧导航栏找到<strong>网络</strong></p><p>设置网络代理（network proxy），选择“手动(Manual)”</p><p><strong>删掉最后一栏的内容</strong>。</p><p>把前4栏都设置成<strong>IP:127.0.0.1,端口：8118</strong></p><hr><p>现在试一下登录chrome就成功了</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/c336fd0bdfbe" target="_blank" rel="noopener">Linux 配置SSR 客户端</a><br><a href="https://kinoko3.github.io/2017/10/18/shadowsocsR-privoxy-liunx%E4%B8%8B%E4%BD%BF%E7%94%A8SSR%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/" target="_blank" rel="noopener">shadowsocsR+privoxy liunx下使用SSR全局代理</a></p><h2 id="2018-7-14-更新"><a href="#2018-7-14-更新" class="headerlink" title="2018.7.14 更新"></a>2018.7.14 更新</h2><p>这两天在看Ubuntu美化时，发现了另外同样也是配置SSR脚本的方法。</p><p>这里也再介绍一下，给大家提供不同的参考意见。</p><p>这里使用的时Charles的脚本。</p><p><a href="https://github.com/ZR-Huang/CharlesScripts/blob/master/charles/bin/ssr?1531550203091" target="_blank" rel="noopener">脚本地址</a></p><p>1.直接复制脚本，并在本地保存名为<code>ssr</code>的文件。<br>2.修改其中<code>ssr_start()</code>函数，在<code>sleep 1</code>之前加入：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gsettings set org<span class="selector-class">.gnome</span><span class="selector-class">.system</span><span class="selector-class">.proxy</span><span class="selector-class">.http</span> host <span class="string">'127.0.0.1'</span></span><br><span class="line">gsettings set org<span class="selector-class">.gnome</span><span class="selector-class">.system</span><span class="selector-class">.proxy</span><span class="selector-class">.http</span> port <span class="number">1080</span></span><br><span class="line">gsettings set org<span class="selector-class">.gnome</span><span class="selector-class">.system</span><span class="selector-class">.proxy</span> mode <span class="string">'manual'</span></span><br></pre></td></tr></table></figure><p>3.在<code>ssr_stop()</code>里，在<code>sudo python3 local.py -d stop</code>之前加入：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsettings set org<span class="selector-class">.gnome</span><span class="selector-class">.system</span><span class="selector-class">.proxy</span> mode <span class="string">'auto'</span></span><br></pre></td></tr></table></figure><p>4.修改该文件的权限，并把他放到用户本地的命令目录里面，这样下次可以直接输命令调用比较方便。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">700</span> ssr</span><br><span class="line">sudo mv ssr <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span></span><br></pre></td></tr></table></figure><p>5.在命令行里面运行</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssr install # 等待安装完毕</span><br><span class="line">ssr<span class="built_in"> config </span># 填入自己的ssr配置</span><br><span class="line"><span class="comment"># 如果你没有自己的ssr服务器，也可以用 ssr update这个命令，会自己下载配置文件</span></span><br><span class="line">ssr start # 启动ssr</span><br></pre></td></tr></table></figure><h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/35362159" target="_blank" rel="noopener">Ubuntu17.10／Ubuntu18.04配置以及美化</a></p>]]></content>
      
      
        <tags>
            
            <tag> ssr </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>写在开头</title>
      <link href="/2018/12/09/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/"/>
      <content type="html"><![CDATA[<p>其实吧，在今年的一月份的时候，我就用Git Pages搭过一个博客。</p><p>可能是出于还不明白自己到底想要通过博客去实现什么？</p><p>在花了近一年的时间，在知乎，简书以及公众号上断断续续地发文，我想我现在已经摸索到了一点自己想要的东西所在的方位。</p><p>在这一年中，我看到过一句话，给我留下非常深刻的印象，大意是：<strong>在实现目标的过程中，不断地去跟别人强调自己在做什么以及自己的进度的人，往往实现不了目标</strong>。</p><p>这一年来自己多多少少也算是走南闯北了，经历了不少的事情。</p><p>昨天给一个在美国的老友说了一声生日祝福，她说：“你看起来老了很多”。</p><p>哈哈哈哈哈，毕竟上年纪了呀。</p><p>嘘～🤫，接下来，就让我们静静等待2019年的来临。</p><p>看看这个博客，会发生神奇的变化吧。</p>]]></content>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
